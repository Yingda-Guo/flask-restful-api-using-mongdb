version: '3.8'
services:

  flask:
    build: .
    container_name: flask
    image: flask-python:3.6
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 3000
      MONGODB_DATABASE: movie-bag
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      MONGODB_HOSTNAME: mongodb
      JWT_SECRET_KEY: t1NP63m4wnBg6nyHYKfmc2TpCOGI4nssg
    ports:
      - 3000:3000
    # volumes:
    #   - appdata:/usr/src/
    depends_on:
      - mongodb
    # networks:
    #   - frontend
    #   - backend

  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: movie-bag
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    # ports:
    #   - 27017:27017
    # volumes:
    #   - mongodbdata:/data/db
    # networks:
    #   - backend
  
  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_AUTH_USERNAME: root
      ME_CONFIG_MONGODB_AUTH_PASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: 123
      # ME_CONFIG_MONGODB_SERVER: mongodb
      # ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
      
    depends_on:
      - mongodb
    # networks:
    #   - frontend
    #   - backend

# networks:
#   frontend:
#     driver: bridge
#   backend:
#     driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local